name: Build & Release 
on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:  
  build:      
    name: Build & Release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: Android
            os: ubuntu-latest
            artifact_name: release-apk
            artifact_path: build/app/outputs/flutter-apk/*.apk
          - target: Windows
            os: windows-latest
            artifact_name: wuxialearn-release #.zip
            artifact_path: build/windows/x64/runner/Release
    runs-on: ${{ matrix.os }}

    steps:
        #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

        #2 Get Latest Tag
      - name: Get Latest Tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 )
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          echo "Latest Tag: $latest_tag"
          echo ${{ env.LATEST_TAG }} 

        #3 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'
          cache: gradle

        #4 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
          channel: 'stable'
          cache: true

        #5 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

        #6 Setup Keystore
      - name: Decode Keystore
        if: matrix.target == 'Android'
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          
      - name: Create key.properties
        if: matrix.target == 'Android'
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
        
       #7 Build APK
      - name: Build APK
        if: matrix.target == 'Android'
        run: flutter build apk --release --split-per-abi

        #8 Build Windows
      - name: Build Windows
        if: matrix.target == 'Windows'
        run: flutter build windows --release

      #9 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}

      #10 Upload to Latest Tag
      - name: Upload to Latest Tag
        if: matrix.target == 'Android'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          gh release upload ${{ env.LATEST_TAG }} \
          build/app/outputs/flutter-apk/app-arm64-v8a-release.apk \
          build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk \
          build/app/outputs/flutter-apk/app-x86_64-release.apk \
          --clobber
      
      - name: Upload to Latest Tag
        if: matrix.target == 'Windows'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          gh release upload ${{ env.LATEST_TAG }} \
          build/windows/x64/runner/Release/ \
          --clobber